RT2 Project 6: Data Selection Parameter Estimation Framework
Jack Fogelquist
2024-06-04

This script is an example implementation of the data selection parameter estimation framework developed in J. Fogelquist and X. Lin, "Uncertainty-Aware Data Selection Framework for Parameter Estimation with Application to Li-ion Battery," 2022 American Control Conference (ACC), Atlanta, GA, USA, 2022, pp. 384-391, doi: 10.23919/ACC53348.2022.9867243

In this implementation, the framework is applied to estimate a health-related electrochemical battery parameter called the cathode diffusion coefficient (D_s_p). The estimation voltage data is simulated from a random operational input current profile called the Federal Urban Driving Schedule (FUDS).

Algorithm Summary:
This algorithm loads a random input current profile; simulates the battery output voltage under the true parameter set (for reference) and an uncertain parameter set (for estimation); rates the quality of the data segments a priori (i.e., under the initial guess of the target parameter); extracts high quality data segments and uses them to perform the estimation and compute an a posteriori quality rating (i.e., under each estimate of the target parameter); and outputs the final estimate (based on the a posteriori rating).

Input: Input current profile time series data (FUDS_Profile.mat is provided as an example)

Output: D_s_p estimation result, displayed in the MATLAB command window.

Files:

SPMe_DS_Dsp.m: Main script that executes the data selection algorithm.

SPMe.m: Battery model function implemented in SPMeSens_DS.m that computes the voltage response to input current.

SPMeSens_DS.m: Battery model function implemented in SPMeSens_DS.m that computes the parameter sensitivities.

config.ini: Configuration file that comprises settings for SPMeSens_DS.m.

IniConfig.m: Class for reading the configuration file.

FUDS_Profile.mat: Example input current profile time series data.

FUDS_Profile_Qtable_Dsp_Dsp50_epsilonsp10.mat [will be created during the first run]: Matrix of a priori data quality rating values for different segments of the estimation data. This file will be automatically generated by SPMe_DS_Dsp.m if "loadQtable = 0" in config.ini, which takes ~15 minutes.

FUDS_Profile_DspVector_Dsp50_epsilonsp10_10000.mat [will be created during the first run]: Vector of discrete D_s_p values implemented in the estimation algorithm. This file will be automatically generated by SPMe_DS_Dsp.m if "loadDspErrorTable = 0" in config.ini, which takes ~5 minutes.

FUDS_Profile_DspErrorTable_Dsp50_epsilonsp10_10000.mat [will be created during the first run]: Matrix of squared voltage errors under the discrete D_s_p values, which are used to perform the estimation. This file will be automatically generated by SPMe_DS_Dsp.m if "loadDspErrorTable = 0" in config.ini, which takes ~5 minutes. 

Instructions: Open SPMe_DS_Dsp.m and run. Estimation results will be computed for the FUDS example current profile. For convenience, this case can be rerun more quickly by setting "loadQtable = 1" and "loadDspErrorTable = 1" in config.ini, after the associated .mat files have been created. If running another case (by changing the values in config.ini), set "loadQtable = 0" and "loadDspErrorTable = 0" to regenerate the associated .mat files.

Note: This code was developed with MATLAB R2023a on a Windows 10 machine.